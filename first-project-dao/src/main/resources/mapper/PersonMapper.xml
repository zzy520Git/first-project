<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.firstproject.dao.PersonMapper">
  <resultMap id="BaseResultMap" type="com.firstproject.domain.bean.Person">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="addr" jdbcType="VARCHAR" property="addr" />
    <result column="upc" jdbcType="VARCHAR" property="upc" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="yn" jdbcType="BIT" property="yn" />
  </resultMap>
  <sql id="Base_Column_List">
    id, age, addr, upc, name, birthday, status, yn
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from person
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from person
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <!-- 配置useGeneratedKeys和keyProperty返回自增主键 -->
  <insert id="insert" parameterType="com.firstproject.domain.bean.Person" useGeneratedKeys="true" keyProperty="id">
    insert into person (id, age, addr, 
      upc, name, birthday, 
      status, yn)
    values (#{id,jdbcType=BIGINT}, #{age,jdbcType=INTEGER}, #{addr,jdbcType=VARCHAR}, 
      #{upc,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{yn,jdbcType=BIT})
  </insert>
  <!-- 配置useGeneratedKeys和keyProperty返回自增主键 -->
  <insert id="insertSelective" parameterType="com.firstproject.domain.bean.Person"
          useGeneratedKeys="true" keyProperty="id">
    insert into person
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="addr != null">
        addr,
      </if>
      <if test="upc != null">
        upc,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="yn != null">
        yn,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="addr != null">
        #{addr,jdbcType=VARCHAR},
      </if>
      <if test="upc != null">
        #{upc,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="yn != null">
        #{yn,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.firstproject.domain.bean.Person">
    update person
    <set>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="addr != null">
        addr = #{addr,jdbcType=VARCHAR},
      </if>
      <if test="upc != null">
        upc = #{upc,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="yn != null">
        yn = #{yn,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.firstproject.domain.bean.Person">
    update person
    set age = #{age,jdbcType=INTEGER},
      addr = #{addr,jdbcType=VARCHAR},
      upc = #{upc,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      yn = #{yn,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>